<html>
    <head>
        <!-- Load ioBroker scripts and styles-->
        <link rel="stylesheet" type="text/css" href="../../css/adapter.css" />
        <link rel="stylesheet" type="text/css" href="../../lib/css/materialize.css" />

        <script type="text/javascript" src="../../lib/js/jquery-3.2.1.min.js"></script>
        <script type="text/javascript" src="../../socket.io/socket.io.js"></script>

        <script type="text/javascript" src="../../js/translate.js"></script>
        <script type="text/javascript" src="../../lib/js/materialize.js"></script>
        <script type="text/javascript" src="../../js/adapter-settings.js"></script>

        <!-- Load our own files -->
        <link rel="stylesheet" type="text/css" href="style.css" />
        <script type="text/javascript" src="words.js"></script>

        <script type="text/javascript">
            // This will be called by the admin adapter when the settings page loads
            function load(settings, onChange) {
                // example: select elements with id=key and class=value and insert value
                if (!settings) return;
                $('.value').each(function () {
                    var $key = $(this);
                    var id = $key.attr('id');
                    if ($key.attr('type') === 'checkbox') {
                        // do not call onChange direct, because onChange could expect some arguments
                        $key.prop('checked', settings[id]).on('change', () => onChange());
                    } else {
                        // do not call onChange direct, because onChange could expect some arguments
                        $key.val(settings[id])
                            .on('change', () => onChange())
                            .on('keyup', () => onChange());
                    }
                });
                onChange(false);
                // reinitialize all the Materialize labels on the page if you are dynamically adding inputs:
                if (M) M.updateTextFields();
            }

            // This will be called by the admin adapter when the user presses the save button
            function save(callback) {
                // example: select elements with class=value and build settings object
                var obj = {};
                $('.value').each(function () {
                    var $this = $(this);
                    if ($this.attr('type') === 'checkbox') {
                        obj[$this.attr('id')] = $this.prop('checked');
                    } else if ($this.attr('type') === 'number') {
                        obj[$this.attr('id')] = parseFloat($this.val());
                    } else {
                        obj[$this.attr('id')] = $this.val();
                    }
                });
                callback(obj);
            }
        </script>
    </head>

    <body>
        <div class="m adapter-container">
            <div class="row">
                <div class="col s12 m4 l2">
                    <img src="panasonic-comfort-cloud.png" class="logo" />
                </div>
            </div>

            <!-- Put your content here -->

            <!-- For example columns with settings: -->
            <div class="row">
                <div class="col s6 input-field">
                    <input type="email" class="value" id="username" />
                    <label for="username" class="translate">username</label>
                </div>
            </div>
            <div class="row">
                <div class="col s6 input-field">
                    <input type="password" class="value" id="password" />
                    <label for="password" class="translate">password</label>
                </div>
            </div>
            <div class="row">
                <div class="col s6 input-field">
                    <input
                        placeholder="5"
                        name="refreshInterval"
                        type="number"
                        id="refreshInterval"
                        class="value validate"
                    />
                    <label for="refreshInterval" class="translate">refreshInterval</label>
                </div>
            </div>
            <div class="row">
                <div class="col s4 input-field">
                    <input
                        placeholder=""
                        name="appVersion"
                        type="text"
                        id="appVersion"
                        class="value validate"
                    />
                    <label for="appVersion" class="translate">appversion</label>
                </div>
                <div class="col s4 input-field">
                    <input
                        placeholder=""
                        name="appVersionFromGithub"
                        type="text"
                        id="appVersionFromGithub"
                        class="value validate"
                        disabled
                    />
                    <label for="appVersionFromGithub" class="translate">appVersionFromGithub</label>
                </div>
                <div class="col s4 input-field">
                    <input
                        placeholder=""
                        name="useAppVersionFromGithub"
                        type="checkbox"
                        id="useAppVersionFromGithub"
                        class="value"
                    />
                    <label for="useAppVersionFromGithub" class="translate">useAppVersionFromGithub</label>
                </div>
            </div>
        </div>
    </body>
</html>
